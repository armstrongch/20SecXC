<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Runner_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>up = false; up_pressed = false;
down = false; down_pressed = false;
left = false; left_pressed = false;
right = false; right_pressed = false;

default_run_speed = 4;
run_speed = default_run_speed;
column_x = x;
is_player = false;
max_energy = 100;
energy = max_energy;
between_columns = false;
is_drafting = false;

distance_to_finish = 2000;

trying_to_pass_counter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!is_player)
{
    get_cpu_input();
}

if (up_pressed) { if (energy &gt; 5) { run_speed += 0.4; } up_pressed = false; }
if (down_pressed) { run_speed -= 0.4; down_pressed = false; }
if (run_speed &lt; 0) { run_speed = 0; }

//move left/right if between columns
if (between_columns)
{
    if (abs(x-column_x) &lt;= 4)
    {
        x = column_x;
        between_columns = false;
    }
    else if (x &gt; column_x) { x -= 4; }
    else { x += 4; }
}

//start horizontal move if space free
if (!between_columns)
{
    if (right &amp;&amp; column_x &lt; ScrollManager_obj.rightmost_trail_x)
    {
        runner_abreast = collision_rectangle(x+76, y-12, x+96, y + 32, Runner_obj, true, true);
        if (runner_abreast == noone)
        {
            between_columns = true;
            column_x += 64;
        }
    }
    else if (left &amp;&amp; column_x &gt; ScrollManager_obj.leftmost_trail_x)
    {
        runner_abreast = collision_rectangle(x-12, y-12, x-32, y + 32, Runner_obj, true, true);
        if (runner_abreast == noone)
        {
            between_columns = true;
            column_x -= 64;
        }
    }
}

//the further from the inside track you are, the slower you are
column_mod = max(0, (ScrollManager_obj.rightmost_trail_x - x)) / 64 * 0.3;

//calculated run speed = effort level + lane modifier
calc_run_speed = max(0, run_speed - column_mod);
image_speed = calc_run_speed / 30;

y_dif = ScrollManager_obj.scroll_speed - calc_run_speed;

//can't pass runner ahead
runner_ahead = collision_rectangle(x+8, y+y_dif, x+56, y+32, Runner_obj, false, true);
if (runner_ahead != noone)
{
    run_speed = min(run_speed, runner_ahead.run_speed);
    y_dif = max(y_dif, runner_ahead.y_dif);
}

if (is_player)
{
    ScrollManager_obj.scroll_speed -= y_dif;
    y_dif = 0;
}

y += y_dif;

distance_to_finish -= (ScrollManager_obj.scroll_speed - y_dif);

//costs energy to run fast, saves energy running slow
if (run_speed &gt; default_run_speed)
{
    speed_dif = run_speed - default_run_speed;
    energy -= speed_dif/4;
    if (energy &lt;= 0)
    {
        energy = 0;
        run_speed = default_run_speed - 2;
    }
}
else if (run_speed &lt; default_run_speed)
{
    speed_dif = default_run_speed - run_speed;
    energy += speed_dif/6;
}

//draft off runners ahead
runner_ahead = collision_rectangle(x+8, y+y_dif - 32, x+56, y+32, Runner_obj, false, true);
if (runner_ahead != noone)
{
    energy += 1;
    is_drafting = true;
}
else
{
    is_drafting = false;
}
if (energy &gt; max_energy)
{
    energy = max_energy;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
global.draw_runner = self;
with(UI_obj)
{
    draw_set_color(c_black);
    draw_rectangle(
        global.draw_runner.x+4,
        global.draw_runner.y-12,
        global.draw_runner.x+59,
        global.draw_runner.y-4, false);
    
    draw_set_color(c_white);
    draw_rectangle(
        global.draw_runner.x+6,
        global.draw_runner.y-10,
        global.draw_runner.x+6 + 51*(global.draw_runner.energy/global.draw_runner.max_energy),
        global.draw_runner.y-6, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
